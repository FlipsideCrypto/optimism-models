version: 2
models:  
  - name: velodrome__ez_swaps
    description: 'This table contains details on swaps executed on Velodrome.'

    tests:
      - dbt_utils.unique_combination_of_columns:
          combination_of_columns:
            - _LOG_ID  
    columns:
      - name: BLOCK_NUMBER
        description: '{{ doc("evm_block_number") }}'
      - name: BLOCK_TIMESTAMP
        description: '{{ doc("evm_block_timestamp") }}'
      - name: ORIGIN_FUNCTION_SIGNATURE
        description: '{{ doc("evm_origin_sig") }}'
      - name: ORIGIN_FROM_ADDRESS
        description: '{{ doc("evm_origin_from") }}'
      - name: ORIGIN_TO_ADDRESS
        description: '{{ doc("evm_origin_to") }}'
      - name: TX_HASH
        description: '{{ doc("evm_tx_hash") }}' 
      - name: EVENT_INDEX
        description: 'The index of this event within this transcation.'
      - name: PLATFORM
        description: 'The name of the dex. In this case, Velodrome.'
      - name: CONTRACT_ADDRESS
        description: 'The address of the contract interacted with in the swap.'
      - name: POOL_ADDRESS
        description: 'The address of the liquidity pool used for the swap.'
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
      - name: POOL_NAME
        description: 'The name of the liquidity pool used for the swap.'
        tests:
          - not_null:
              config:
                severity: error
                error_if: ">1000"
                warn_if: ">500"  
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - STRING    
                - VARCHAR 
      - name: SENDER_ADDRESS
        description: 'The sender of the swap event.'
      - name: TO_ADDRESS
        description: 'The receiver of the swap event.'
      - name: AMOUNT_IN_UNADJ
        description: 'The amount of tokens in without decimal adjustment.'
      - name: AMOUNT_IN
        description: 'The amount of tokens in.'
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - FLOAT    
                - NUMBER 
      - name: AMOUNT_IN_USD
        description: 'The amount of tokens in, in USD.'
      - name: AMOUNT_OUT_UNADJ
        description: 'The amount of tokens out without decimal adjustment.'
      - name: AMOUNT_OUT
        description: 'The amount of tokens out.'
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - FLOAT    
                - NUMBER 
      - name: AMOUNT_OUT_USD
        description: 'The amount of tokens out, in USD.'
      - name: TOKEN_ADDRESS_IN
        description: 'The contract address of the token in.'
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
      - name: TOKEN_ADDRESS_OUT
        description: 'The contract address of the token out.'
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
      - name: SYMBOL_IN
        description: 'The symbol of the token in.'
        tests:
          - not_null:
              config:
                severity: error
                error_if: ">1000"
                warn_if: ">500"  
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - STRING    
                - VARCHAR 
      - name: SYMBOL_OUT
        description: 'The symbol of the token out.'
        tests:
          - not_null:
              config:
                severity: error
                error_if: ">1000"
                warn_if: ">500"  
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - STRING    
                - VARCHAR 
      - name: LP_FEE
        description: 'The amount of tokens paid to the LP as a fee.'
        tests:
          - not_null
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - NUMBER    
                - FLOAT 
      - name: LP_FEE_USD
        description: 'The amount of tokens paid to the LP as a fee, in USD.'
      - name: LP_FEE_SYMBOL
        description: 'The symbol of the LP token fees.'
        tests:
          - dbt_expectations.expect_column_values_to_be_in_type_list:
              column_type_list:
                - STRING    
                - VARCHAR 
      - name: LP_FEE_TOKEN_ADDRESS
        description: 'The contract address of the LP token fees.'
        tests:
          - not_null:
              where: LP_FEE <> 0 and POOL_ADDRESS <> '0xce9accfbb25eddce91845c3a7c3d1613d1d7081f'
          - dbt_expectations.expect_column_values_to_match_regex:
              regex: 0[xX][0-9a-fA-F]+
      - name: _LOG_ID
        description: '{{ doc("evm_internal_column") }}'
        tests:
          - not_null
      - name: EZ_SWAPS_ID
        description: '{{ doc("evm_pk") }}'   
      - name: INSERTED_TIMESTAMP
        description: '{{ doc("evm_inserted_timestamp") }}'   
      - name: MODIFIED_TIMESTAMP
        description: '{{ doc("evm_modified_timestamp") }}'